export const npmProgram = [
    {
      name: "Введение в NPM",
      lessons: [
        "Что такое NPM и зачем он нужен?",
        "Установка и настройка NPM для проекта",
        "Основы работы с package.json",
        "Понимание структуры и зависимостей в проекте",
      ],
    },
    {
      name: "Основы управления пакетами",
      lessons: [
        "Установка и удаление пакетов с помощью NPM",
        "Управление версиями пакетов: semantic versioning",
        "Просмотр информации о пакете с помощью команды npm info",
        "Обновление пакетов: npm update и npm outdated",
      ],
    },
    {
      name: "Скрипты в NPM",
      lessons: [
        "Что такое NPM скрипты и как их использовать?",
        "Настройка и запуск пользовательских скриптов",
        "Автоматизация задач с помощью npm run",
        "Использование pre и post скриптов",
      ],
    },
    {
      name: "Управление зависимостями",
      lessons: [
        "Установка и управление зависимостями для разработки и продакшн (npm install --save, --save-dev)",
        "Разница между зависимостями и devDependencies",
        "Работа с глобальными зависимостями",
        "Удаление зависимостей с помощью npm uninstall",
      ],
    },
    {
      name: "Работа с версиями пакетов",
      lessons: [
        "Как работать с версиями пакетов в NPM?",
        "Использование версии пакета с помощью символов (например, ~ и ^)",
        "Использование конкретных версий для стабильности проекта",
        "Автоматическое обновление пакетов и поддержание их актуальности",
      ],
    },
    {
      name: "Публикация пакетов в NPM",
      lessons: [
        "Как опубликовать свой пакет в NPM?",
        "Создание и настройка package.json для публикации",
        "Авторизация в NPM и использование команд npm login и npm logout",
        "Подготовка пакета к публикации (версии, метаданные, скрипты)",
        "Удаление и обновление опубликованных пакетов",
      ],
    },
    {
      name: "Работа с private репозиториями и пакетами",
      lessons: [
        "Создание и использование private репозиториев NPM",
        "Авторизация через токены для private пакетов",
        "Использование пакетных менеджеров на основе NPM (например, Yarn)",
        "Интеграция с корпоративными репозиториями и настройка приватного доступа",
      ],
    },
    {
      name: "NPM и монорепозитории",
      lessons: [
        "Что такое монорепозитории и когда они полезны?",
        "Управление несколькими пакетами в одном репозитории с помощью Lerna или Yarn Workspaces",
        "Автоматизация публикации и синхронизации пакетов в монорепозитории",
        "Преимущества и недостатки работы с монорепозиториями",
      ],
    },
    {
      name: "Оптимизация работы с NPM",
      lessons: [
        "Оптимизация времени установки пакетов с помощью npm ci",
        "Использование кеширования в NPM для ускорения процессов сборки",
        "Как работать с npm audit для проверки уязвимостей в зависимостях",
        "Использование npm shrinkwrap для фиксации версий пакетов",
      ],
    },
    {
      name: "Работа с NPM и CI/CD",
      lessons: [
        "Интеграция NPM с системами CI/CD (например, GitHub Actions, GitLab CI)",
        "Автоматизация установки зависимостей в CI/CD пайплайне",
        "Настройка тестирования и сборки с использованием NPM",
        "Деплой и публикация пакетов через автоматизированные скрипты",
      ],
    },
    {
      name: "Управление версиями с помощью NPM",
      lessons: [
        "Использование npm version для обновления версии пакета",
        "Автоматизация выпуска новых версий с использованием git hooks",
        "Интеграция с семантическим версионированием (semver)",
        "Обновление и деплой с помощью версионирования в NPM",
      ],
    },
    {
      name: "Продвинутые концепции и паттерны NPM",
      lessons: [
        "Использование NPM для создания и публикации CLI инструментов",
        "Секреты работы с многими версиями пакетов и управление конфликтами",
        "Интеграция с другими пакетными менеджерами (Yarn, pnpm)",
        "Публикация и использование локальных пакетов в NPM",
      ],
    },
    {
      name: "Надежность и безопасность с NPM",
      lessons: [
        "Использование npm audit для поиска уязвимостей в зависимостях",
        "Как минимизировать риски безопасности при использовании пакетов",
        "Автоматизация проверок безопасности в CI/CD",
        "Публикация безопасных пакетов с учетом best practices",
      ],
    },
    {
      name: "Финальные шаги и развертывание с NPM",
      lessons: [
        "Как подготовить NPM-пакет к продакшн-сборке",
        "Оптимизация бандлов и уменьшение размера пакетов",
        "Настройка и использование CI/CD для автоматической публикации пакетов",
        "Мониторинг и поддержка опубликованных пакетов",
      ],
    },
  ];
  